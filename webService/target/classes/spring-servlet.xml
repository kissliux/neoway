<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <!-- 会自动注册了validator  ConversionService  注释掉 解决json 乱码问题  -->
    <mvc:annotation-driven validator="validator" conversion-service="conversion-service">
        <mvc:message-converters register-defaults="true">
            <bean class="com.jsr.common.util.UTF8StringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>


    <!-- 开启controller注解支持 -->
    <!-- 注：如果base-excepttion=com.neoway 则注解事务不起作用  -->
    <context:component-scan base-package="com.jsr.*.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:view-controller path="/" view-name="/index"/>
    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->

    <!-- 静态资源映射 -->
   <mvc:resources mapping="/images/**" location="/WEB-INF/images/" cache-period="3600"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period="3600"/>
    <mvc:resources mapping="/dist/**" location="/WEB-INF/dist/" cache-period="3600"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="3600"/>
    <mvc:resources mapping="/upload/**" location="/WEB-INF/upload/" cache-period="3600"/>

    <!-- ========================= VIEW定义 ========================= -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                    <property name="objectMapper">
                        <bean class="com.fasterxml.jackson.databind.ObjectMapper" />
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="1">
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="contentType" value="text/html"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>
    <!-- 控制器异常处理    -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception"> error/error</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
              <prop key="error/status401">401</prop>
                <prop key="error/status404">401</prop>
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"></property>
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="error/error"></property>
        <!-- 默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"></property>
    </bean>

</beans>
